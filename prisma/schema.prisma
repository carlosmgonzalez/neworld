// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id               String   @id @default(uuid())
  name             String
  description      String
  smallDescription String
  price            Float
  stock            Int
  images           String[]
  infoImages       String[]
  isActive         Boolean  @default(true)
  soldCount        Int      @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Review Review[]
}

model Review {
  id      String @id @default(uuid())
  name    String
  rating  Int
  comment String

  product   Product @relation(fields: [productId], references: [id])
  productId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum OrderStatus {
  PENDING
  PAID
  PACKING
  SHIPPED
  DELIVERED
  CANCELLED
}

model Order {
  id         String @id @default(uuid())
  totalItems Int
  totalPrice Float

  name     String
  lastname String
  email    String
  province String
  address  String
  locality String @default("no incluido")
  zipCode  String
  phone    String
  dni      String

  status OrderStatus @default(PENDING)
  paid   Boolean     @default(false)
  paidAt DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  OrderItem OrderItem[]
}

model OrderItem {
  id        String @id @default(uuid())
  productId String
  quantity  Int
  price     Float

  order   Order  @relation(fields: [orderId], references: [id])
  orderId String
}

model Province {
  id         Int        @id // No @default(autoincrement()) si los IDs son predefinidos y no generados por la BD
  province   String     @db.VarChar(255) // Mapea a varchar(255)
  localities Locality[]

  @@map("Provinces") // Mapea al nombre de tabla "Provinces"
}

model Locality {
  id          Int      @id // No @default(autoincrement()) si los IDs son predefinidos
  id_province Int
  locality    String   @db.VarChar(255) // Asumiendo que también quieres un límite, o simplemente String para TEXT
  province    Province @relation(fields: [id_province], references: [id])

  @@map("Localities") // Mapea al nombre de tabla "Localities"
}
